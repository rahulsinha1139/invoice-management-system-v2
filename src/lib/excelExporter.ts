/**
 * Excel Export Functionality - Flask Backend Inspired
 * Comprehensive data export for invoices, products, and customers
 * Based on Flask backend's openpyxl implementation
 */

interface ExcelInvoiceData {
  invoiceNumber: string;
  invoiceDate: string;
  customerName: string;
  customerAddress: string;
  customerGSTIN?: string;
  items: Array<{
    product: string;
    hsn: string;
    quantity: number;
    rate: number;
    discount: number;
    amount: number;
  }>;
  subtotal: number;
  tax: number;
  total: number;
  amountInWords: string;
  poNumber?: string;
  paymentMethod?: string;
  notes?: string;
}

/**
 * Generate CSV content for invoice data
 * This provides Excel-compatible format without external dependencies
 */
export function generateInvoiceCSV(data: ExcelInvoiceData): string {
  const csvContent = [];

  // Header Information
  csvContent.push('UNIQUE ENGINEERS CORPORATION');
  csvContent.push('Authorized Distributors - TotalEnergies | Eutectic Castolin | PIX Transmissions');
  csvContent.push('Khutehi Road, Ward No. 32, Katni, Madhya Pradesh - 483501');
  csvContent.push('');
  csvContent.push('TAX INVOICE');
  csvContent.push('');

  // Invoice Details
  csvContent.push(`Invoice Number:,${data.invoiceNumber}`);
  csvContent.push(`Invoice Date:,${data.invoiceDate}`);
  if (data.poNumber) csvContent.push(`PO Number:,${data.poNumber}`);
  if (data.paymentMethod) csvContent.push(`Payment Method:,${data.paymentMethod}`);
  csvContent.push('');

  // Customer Details
  csvContent.push('BILL TO:');
  csvContent.push(`Customer Name:,${data.customerName}`);
  csvContent.push(`Address:,${data.customerAddress}`);
  if (data.customerGSTIN) csvContent.push(`GSTIN:,${data.customerGSTIN}`);
  csvContent.push('');

  // Items Header
  csvContent.push('S.No,Product Description,HSN Code,Quantity,Rate (₹),Discount %,Amount (₹)');

  // Items Data
  data.items.forEach((item, index) => {
    csvContent.push([
      index + 1,
      `"${item.product.replace(/"/g, '""')}"`, // Escape quotes in product names
      item.hsn,
      item.quantity,
      item.rate.toFixed(2),
      item.discount.toFixed(2),
      item.amount.toFixed(2)
    ].join(','));
  });

  csvContent.push('');

  // Totals
  csvContent.push(`Subtotal:,₹${data.subtotal.toFixed(2)}`);
  csvContent.push(`Tax (18%):,₹${data.tax.toFixed(2)}`);
  csvContent.push(`Grand Total:,₹${data.total.toFixed(2)}`);
  csvContent.push('');
  csvContent.push(`Amount in Words:,"${data.amountInWords}"`);

  if (data.notes) {
    csvContent.push('');
    csvContent.push(`Notes:,"${data.notes}"`);
  }

  csvContent.push('');
  csvContent.push('Generated by Unique Engineers Corporation Invoice System');
  csvContent.push(`Export Date:,${new Date().toISOString().split('T')[0]}`);

  return csvContent.join('\n');
}

/**
 * Download invoice data as CSV file
 */
export function downloadInvoiceExcel(data: ExcelInvoiceData): void {
  const csvContent = generateInvoiceCSV(data);
  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
  const link = document.createElement('a');
  const url = URL.createObjectURL(blob);

  link.setAttribute('href', url);
  link.setAttribute('download', `Invoice_${data.invoiceNumber}_${data.invoiceDate}.csv`);
  link.style.visibility = 'hidden';
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}

/**
 * Generate product catalog export
 */
export function generateProductCatalogCSV(products: any[]): string {
  const csvContent = [];

  // Header
  csvContent.push('UNIQUE ENGINEERS CORPORATION - PRODUCT CATALOG');
  csvContent.push(`Export Date:,${new Date().toISOString().split('T')[0]}`);
  csvContent.push('');

  // Column headers
  csvContent.push('Product ID,Product Name,Brand,Category,HSN Code,Pack Size,UOM,Specifications');

  // Product data
  products.forEach(product => {
    csvContent.push([
      product.id,
      `"${product.product_name.replace(/"/g, '""')}"`,
      product.brand_name || 'N/A',
      product.category_name || 'N/A',
      product.hsn_code,
      product.pack_size_value || 'N/A',
      product.selling_uom_code || 'N/A',
      `"${JSON.stringify(product.specifications || {}).replace(/"/g, '""')}"`
    ].join(','));
  });

  csvContent.push('');
  csvContent.push(`Total Products: ${products.length}`);

  return csvContent.join('\n');
}

/**
 * Download product catalog as CSV
 */
export function downloadProductCatalog(products: any[]): void {
  const csvContent = generateProductCatalogCSV(products);
  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
  const link = document.createElement('a');
  const url = URL.createObjectURL(blob);

  link.setAttribute('href', url);
  link.setAttribute('download', `Product_Catalog_${new Date().toISOString().split('T')[0]}.csv`);
  link.style.visibility = 'hidden';
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}

/**
 * Generate customer list export
 */
export function generateCustomerListCSV(customers: any[]): string {
  const csvContent = [];

  // Header
  csvContent.push('UNIQUE ENGINEERS CORPORATION - CUSTOMER DATABASE');
  csvContent.push(`Export Date:,${new Date().toISOString().split('T')[0]}`);
  csvContent.push('');

  // Column headers
  csvContent.push('Customer ID,Name,GSTIN,Billing Address,City,State,Phone,Email,Credit Limit');

  // Customer data
  customers.forEach(customer => {
    csvContent.push([
      customer.id,
      `"${customer.name.replace(/"/g, '""')}"`,
      customer.gstin || 'N/A',
      `"${customer.billing_address.replace(/"/g, '""')}"`,
      customer.city || 'N/A',
      customer.state,
      customer.phone || 'N/A',
      customer.email || 'N/A',
      customer.credit_limit || 0
    ].join(','));
  });

  csvContent.push('');
  csvContent.push(`Total Customers: ${customers.length}`);

  return csvContent.join('\n');
}

/**
 * Download customer list as CSV
 */
export function downloadCustomerList(customers: any[]): void {
  const csvContent = generateCustomerListCSV(customers);
  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
  const link = document.createElement('a');
  const url = URL.createObjectURL(blob);

  link.setAttribute('href', url);
  link.setAttribute('download', `Customer_List_${new Date().toISOString().split('T')[0]}.csv`);
  link.style.visibility = 'hidden';
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}

/**
 * Generate comprehensive business report
 */
export function generateBusinessReportCSV(data: {
  invoices: any[];
  products: any[];
  customers: any[];
  summary: {
    totalInvoices: number;
    totalRevenue: number;
    topCustomers: any[];
    topProducts: any[];
  };
}): string {
  const csvContent = [];

  // Header
  csvContent.push('UNIQUE ENGINEERS CORPORATION - BUSINESS REPORT');
  csvContent.push(`Report Date:,${new Date().toISOString().split('T')[0]}`);
  csvContent.push('');

  // Executive Summary
  csvContent.push('EXECUTIVE SUMMARY');
  csvContent.push(`Total Invoices Generated:,${data.summary.totalInvoices}`);
  csvContent.push(`Total Revenue:,₹${data.summary.totalRevenue.toFixed(2)}`);
  csvContent.push(`Active Customers:,${data.customers.length}`);
  csvContent.push(`Product Catalog Size:,${data.products.length}`);
  csvContent.push('');

  // Top Customers
  if (data.summary.topCustomers && data.summary.topCustomers.length > 0) {
    csvContent.push('TOP CUSTOMERS BY REVENUE');
    csvContent.push('Rank,Customer Name,Total Revenue');
    data.summary.topCustomers.forEach((customer, index) => {
      csvContent.push(`${index + 1},"${customer.name}",₹${customer.revenue?.toFixed(2) || '0.00'}`);
    });
    csvContent.push('');
  }

  // Top Products
  if (data.summary.topProducts && data.summary.topProducts.length > 0) {
    csvContent.push('TOP PRODUCTS BY SALES');
    csvContent.push('Rank,Product Name,Units Sold,Revenue');
    data.summary.topProducts.forEach((product, index) => {
      csvContent.push(`${index + 1},"${product.name}",${product.units_sold || 0},₹${product.revenue?.toFixed(2) || '0.00'}`);
    });
    csvContent.push('');
  }

  // Recent Invoices Summary
  csvContent.push('RECENT INVOICES (LAST 10)');
  csvContent.push('Invoice Number,Date,Customer,Amount');
  data.invoices.slice(-10).forEach(invoice => {
    csvContent.push([
      invoice.invoice_number,
      invoice.invoice_date,
      `"${invoice.customer_name || 'Unknown'}"`,
      `₹${invoice.grand_total?.toFixed(2) || '0.00'}`
    ].join(','));
  });

  csvContent.push('');
  csvContent.push('Generated by Unique Engineers Corporation Business Intelligence System');

  return csvContent.join('\n');
}

/**
 * Download business report as CSV
 */
export function downloadBusinessReport(data: any): void {
  const csvContent = generateBusinessReportCSV(data);
  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
  const link = document.createElement('a');
  const url = URL.createObjectURL(blob);

  link.setAttribute('href', url);
  link.setAttribute('download', `Business_Report_${new Date().toISOString().split('T')[0]}.csv`);
  link.style.visibility = 'hidden';
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}

/**
 * Extract invoice data for Excel export from form state
 */
export function extractInvoiceExcelData(
  invoiceNumber: string,
  invoiceDate: string,
  customer: any,
  lines: any[],
  subtotal: number,
  tax: number,
  total: number,
  amountInWords: string,
  additionalInfo?: any
): ExcelInvoiceData {
  return {
    invoiceNumber,
    invoiceDate,
    customerName: customer?.name || '',
    customerAddress: customer?.billing_address || '',
    customerGSTIN: customer?.gstin,
    items: lines.map(line => ({
      product: line.product_name,
      hsn: line.hsn_code,
      quantity: line.quantity,
      rate: line.unit_price || 0,
      discount: line.discount_pct || 0,
      amount: line.quantity * (line.unit_price || 0) * (1 - (line.discount_pct || 0) / 100)
    })),
    subtotal,
    tax,
    total,
    amountInWords,
    poNumber: additionalInfo?.poNumber,
    paymentMethod: additionalInfo?.paymentMethod,
    notes: additionalInfo?.notes
  };
}

// High-level convenience functions
export const exportInvoiceToExcel = (
  invoiceNumber: string,
  invoiceDate: string,
  customer: any,
  lines: any[],
  subtotal: number,
  tax: number,
  total: number,
  amountInWords: string,
  additionalInfo?: any
) => {
  const excelData = extractInvoiceExcelData(
    invoiceNumber,
    invoiceDate,
    customer,
    lines,
    subtotal,
    tax,
    total,
    amountInWords,
    additionalInfo
  );
  downloadInvoiceExcel(excelData);
};

export default {
  generateInvoiceCSV,
  downloadInvoiceExcel,
  generateProductCatalogCSV,
  downloadProductCatalog,
  generateCustomerListCSV,
  downloadCustomerList,
  generateBusinessReportCSV,
  downloadBusinessReport,
  extractInvoiceExcelData,
  exportInvoiceToExcel
};